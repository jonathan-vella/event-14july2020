### Deploy Azure Hub and Spoke network infra thru CloudShell using Azure CLI ###
### Last modified 07-April-2020
### Author jonathan.vella@microsoft.com

##Define Variables
  subscription="iLuvCloud" # Azure subscription where resources will be deployed
  location="West Europe" # Azure Region for you resources
  resgroup_name="demo-sec08-rg" # Azure Resource Group name

##Login to Azure and specify subscription **use only if not using Cloud Shell**
  az login
  az account set --subscription $subscription

##Create Resource Groups
  az group create --name $resgroup_name --location $location

##Create Virtual Networks and Subnets
  #Create Hub Virtual network
    az network vnet create \
    --name hub-vnet \
    --resource-group $resgroup_name \
    --location $location \
    --address-prefix 10.0.0.0/16 \
    --subnet-name hub-snet-adds \
    --subnet-prefix 10.0.1.0/24
        
        #Create Azure Firewall subnet in Hub Virtual network
        az network vnet subnet create \
        --name AzureFirewallSubnet \
        --resource-group $resgroup_name \
        --vnet-name hub-vnet   \
        --address-prefix 10.0.250.0/24

        #Create Jumpbox subnet in Hub Virtual network
        az network vnet subnet create \
        --name hub-snet-jbox \
        --resource-group $resgroup_name \
        --vnet-name hub-vnet \
        --address-prefix 10.0.254.0/24

    #Create Prod Virtual network
    az network vnet create \
    --name prod-vnet \
    --resource-group $resgroup_name \
    --location $location \
    --address-prefix 10.11.0.0/16 \
    --subnet-name prod-snet-01 \
    --subnet-prefix 10.11.1.0/24

    #Create Dev Virtual network
    az network vnet create \
    --name dev-vnet \
    --resource-group $resgroup_name \
    --location $location \
    --address-prefix 10.12.0.0/16 \
    --subnet-name dev-snet-01 \
    --subnet-prefix 10.12.1.0/24

    #Create On-Prem Virtual network in any other region for S2S connectivity
    az network vnet create \
    --name onprem-vnet \
    --resource-group $resgroup_name \
    --location "North Europe" \
    --address-prefix 192.168.0.0/16 \
    --subnet-name onprem-snet-01 \
    --subnet-prefix 192.168.1.0/24

##Create network cards for VMs
    #Create NIC for Prod VM
        az network nic create \
        -g $resgroup_name \
        -n prod-nic-vm01 \
        --vnet-name prod-vnet \
        --subnet prod-snet-01 \
        --public-ip-address "" \
        --dns-servers 209.244.0.3 209.244.0.4
    
    #Create NIC for Dev VM
        az network nic create \
        -g $resgroup_name \
        -n dev-nic-vm01 \
        --vnet-name dev-vnet \
        --subnet dev-snet-01 \
        --public-ip-address "" \
        --dns-servers 209.244.0.3 209.244.0.4
    
    #Create NIC for On-Premises VM
        az network nic create \
        -g $resgroup_name \
        -n onprem-nic-vm01 \
        --vnet-name onprem-vnet \
        --subnet onprem-snet-01 \
        --public-ip-address "" \
        --dns-servers 209.244.0.3 209.244.0.4

##Create a virtual machine in every VNET for comms check. When prompted, type a password for the virtual machine.
    #Create Jumpbox HUB Vnet VM
    az vm create \
    --resource-group $resgroup_name \
    --name hub-vm-jbox \
    --location $location \
    --image win2019datacenter \
    --vnet-name hub-vnet \
    --subnet hub-snet-jbox \
    --admin-username azureadmin
        az vm open-port --port 3389 --resource-group $resgroup_name --name hub-vm-jbox
    
    #Create Prod VM
    az vm create \
    --resource-group $resgroup_name \
    --name prod-vm01 \
    --location $location \
    --image win2019datacenter \
    --nics prod-nic-vm01 \
    --admin-username azureadmin

    #Create Dev VM
    az vm create \
    --resource-group $resgroup_name \
    --name dev-vm01 \
    --location $location \
    --image win2019datacenter \
    --nics dev-nic-vm01 \
    --admin-username azureadmin

    #Create On-Premises VM
    az vm create \
    --resource-group $resgroup_name \
    --name onprem-vm01 \
    --location "North Europe" \
    --image win2019datacenter \
    --nics onprem-nic-vm01 \
    --admin-username azureadmin

##Deploy Azure Firewall
    #Install Azure Firewall extension
    #az extension add -n azure-firewall

    az network firewall create \
    --name we-fw01 \
    --resource-group $resgroup_name \
    --location $location
    az network public-ip create \
        --name fw-pip \
        --resource-group $resgroup_name \
        --location $location \
        --allocation-method static \
        --sku standard
    az network firewall ip-config create \
        --firewall-name we-fw01 \
        --name FW-config \
        --public-ip-address fw-pip \
        --resource-group $resgroup_name \
        --vnet-name hub-vnet
    az network firewall update \
        --name we-fw01 \
        --resource-group $resgroup_name 
    az network public-ip show \
        --name fw-pip \
        --resource-group $resgroup_name
    fwprivaddr="$(az network firewall ip-config list -g $resgroup_name -f we-fw01 --query "[?name=='FW-config'].privateIpAddress" --output tsv)"

##****Note the private IP address. You'll use it later when you create the default route****##

##Create default route
    #Create a table, with BGP route propagation disabled
    az network route-table create \
    --name Firewall-rt-table \
    --resource-group $resgroup_name \
    --location $location \
    --disable-bgp-route-propagation true

        #Create the route
        az network route-table route create \
        --resource-group $resgroup_name \
        --name DG-Route \
        --route-table-name Firewall-rt-table \
        --address-prefix 0.0.0.0/0 \
        --next-hop-type VirtualAppliance \
        --next-hop-ip-address $fwprivaddr

            #Associate the route table to the Prod subnet
            az network vnet subnet update \
            -n prod-snet01 \
            -g $resgroup_name \
            --vnet-name prod-vnet \
            --address-prefixes 10.11.1.0/24 \
            --route-table Firewall-rt-table

            #Associate the route table to the Dev subnet
            az network vnet subnet update \
            -n dev-snet01 \
            -g $resgroup_name \
            --vnet-name dev-vnet \
            --address-prefixes 10.12.1.0/24 \
            --route-table Firewall-rt-table

##Create IP Group for Prod and Dev IP Address spaces
New-AzIpGroup -Name ipgroup-spokes -ResourceGroupName $resgroup_name -Location $location -IpAddress 10.11.1.0/24,10.12.1.0/24

##Create Application Rule
az network firewall application-rule create \
   --collection-name App-Coll01 \
   --firewall-name we-fw01 \
   --name Allow-Google \
   --protocols Http=80 Https=443 \
   --resource-group $resgroup_name \
   --target-fqdns www.google.com \
   --source-ip-groups ipgroup-spokes \
   --priority 200 \
   --action Allow

##Create Network Rule
az network firewall network-rule create \
   --collection-name Net-Coll01 \
   --destination-addresses 209.244.0.3 209.244.0.4 \
   --destination-ports 53 \
   --firewall-name we-fw01 \
   --name Allow-DNS \
   --protocols UDP \
   --resource-group $resgroup_name \
   --priority 200 \
   --source-ip-groups ipgroup-spokes \
   --action Allow